@page "/identity/forgot-password"


<h3 class="text-center font-weight-light mb-4">
    <i class="fas fa-key"></i> Password Recovery
</h3>

<div class="small mb-3 text-muted">
    Enter your email address and we will send you a code to reset your password.
</div>
<EditForm EditContext="FormContext" OnValidSubmit="HandleValidSubmitAsync">
    <DataAnnotationsValidator />
    <CustomValidationMessages @ref="ValidationMessages" />
    <ValidationSummary Model="@ForgotPasswordModel" />
    <div class="form-floating mb-3">
        <InputText @bind-Value="ForgotPasswordModel.Email" class="form-control box-shadow" id="inputEmail" type="email" placeholder="name@example.com" />
        <label for="inputEmail"><i class="fas fa-envelope"></i> Email address</label>
        <ValidationMessage For="@(() => ForgotPasswordModel.Email)" />
    </div>
    <div class="d-grid gap-3 d-md-flex">
        <a class="col btn btn-primary btn-form-floating" href="identity/login">
            <i class="fas fa-arrow-left"></i> Return to login
        </a>
        <button disabled="@IsSubmitBtnDisabled" class="col btn btn-success btn-form-floating" type="submit">
            @(IsSubmitBtnDisabled ? "Submitting...." : "Submit") <i class="fas fa-paper-plane"></i>
        </button>
    </div>
</EditForm>

@code {
    private EditContext FormContext { get; set; }

    private ForgotPasswordModel ForgotPasswordModel { get; set; } = new ForgotPasswordModel();

    private CustomValidationMessages ValidationMessages { get; set; }

    private bool IsSubmitBtnDisabled { get; set; }

    protected override void OnInitialized()
    {
        FormContext = new EditContext(ForgotPasswordModel);
        FormContext.SetFieldCssClassProvider(new BootstrapValidationClassProvider());
    }

    private async Task HandleValidSubmitAsync()
    {
        await Task.CompletedTask;
    }
}